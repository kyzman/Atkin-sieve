# решето Аткина
def sieve_of_atkin(limit):
    if limit < 4:  # Проверка базовых значений которые не входят в стандартный диапазон (до 3, включительно)
        results = [d+2 for d in range(limit - 1)]  # если меньше возвращаем массив простых чисел (до 3х включительно)
    else:
        results = [2, 3]  # если больше, то инициализируем массив с уже имеющимися простыми числами 2 и 3

    sieve = [False] * (limit + 1)  # создаём пустое сито со значениями False на размерность массива до искомого

    # Заполняем сито предварительными значениями
    for x in range(1, int(limit**0.5) + 1):  # создаём координату x сита
        for y in range(1, int(limit**0.5) + 1):  # создаём координату y сита
            n = 4*x**2 + y**2  # формула для вычисления 1 шага
            if n <= limit and (n % 12 == 1 or n % 12 == 5):  # проверяем на соответствие значения условию 1го шага
                sieve[n] = not sieve[n]  # инвертируем ячейку сита
            n = 3*x**2 + y**2  # формула для вычисления 2 шага
            if n <= limit and n % 12 == 7:  # проверяем на соответствие значения условию 2го шага
                sieve[n] = not sieve[n]  # инвертируем ячейку сита
            n = 3*x**2 - y**2  # формула для вычисления 3 шага
            if x > y and n <= limit and n % 12 == 11:  # проверяем на соответствие значения условию 3го шага
                sieve[n] = not sieve[n]  # инвертируем ячейку сита

    # Отсеиваем кратные квадратам простых чисел в интервале [5, sqrt(limit)], т.к. основной этап не может их отсеять
    for x in range(5, int(limit**0.5) + 1):  # создаём координату x cита в интервале до квадратного корня диапазона
        if sieve[x]:  # если в данном диапазоне ячейка сита в положении True, то
            for y in range(x**2, limit + 1, x**2):  # проходим циклом кратные этому числу и
                sieve[y] = False  # и присваиваем False (закрываем ячейку сита, т.к. это явно не простые числа)

    for x in range(5, limit + 1):  # создаём цикл для вывода результата с 5 до выбранного числа
        if sieve[x]:  # если в сите ячейка в положении True
            results.append(x)  # то добавляем данное значение в результат.

    return results  # возвращаем результат.



m = 101
print(sieve_of_atkin(m))
